var cpu = function() {
    var playerOneArray = [];
    let playerTwoArray = [];
    var combos = [
        [0, 1, 2],
        [3, 4, 5],
        [6, 7, 8],
        [0, 3, 6],
        [1, 4, 7],
        [2, 5, 8],
        [0, 4, 8],
        [2, 4, 6]
    ];
    var idx1 = [];
    for (var i in col) {
        if (col[i].innerText === playerOne.shape) {
            idx1.push(Number(i));
        }
    }


    if ((playerTwo.turn) && (gameOn)) {
        if (idx1.length < 2) {
            if (col[4].innerText === "") {
                col[4].innerText = playerTwo.shape;
            } else {
                move();
            }
            switchTurns();
        } else {
            //cpuMove();
            cpuBlock();
            switchTurns();
        }

    }



    console.log(match(checkForMove(playerTwo)))

    function cpuMove() {
        let array = checkForMove(playerTwo);
        match(array).forEach(function(elem, ind) {
            if (elem) {
                console.log(col[ind].innerText.indexOf(""))
                combos[ind].forEach(function(el) {

                }); //COMPLETE ME!!
                playerTwoArray.push(combos[ind]);
                console.log(playerTwoArray);
                checkArray(playerTwoArray[0]);
                checkWin(playerTwo.shape);
            } else {
                return
            }
        });
    }


    function cpuBlock() {
        match(idx1).forEach(function(elem, ind) {
            if (elem) {
                console.log(elem, ind)
                combos[ind].forEach(function(el) {
                    console.log(el)
                }); //COMPLETE ME!!
                console.log(combos[ind])
                    //checkArray(combos[ind]);
                playerOneArray.push(combos[ind])
            }
        });
        console.log([playerOneArray])
        checkArray(playerOneArray[0]);
        checkWin(playerTwo.shape);
    }

    function match(arr) {

        var check = combos.map(function(elem, ind) {
            return arr.filter(function(el) {
                return combos[ind].indexOf(el) > -1 && combos[ind];
            }).length > 1;
        });
        return check;
    }

    function checkForMove(player) {
        let idxArr = [];
        for (var i in col) {
            if (col[i].innerText === player.shape) {
                idxArr.push(Number(i));
            }
        }
        return idxArr
    }

    function checkArray(arr) {
        console.log(arr)
        var pick = arr.filter(function(index) {
            if (col[index].innerText === "") {
                return index;
            }
        });
        if (pick[0] === undefined) {
            move();
        } else {
            col[pick].innerText = playerTwo.shape;
        }
        console.log(typeof pick, pick[0])
            //col[pick].innerText = playerTwo.shape;
    }


};
